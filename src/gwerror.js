
function errorCodeToString(code) {
  let ret = '';
  if (code ===  1) ret = 'NEXT without FOR';
  if (code ===  2) ret = 'Syntax error';
  if (code ===  3) ret = 'RETURN without GOSUB';
  if (code ===  4) ret = 'Out of DATA';
  if (code ===  5) ret = 'Illegal function call';
  if (code ===  6) ret = 'Overflow';
  if (code ===  7) ret = 'Out of memory';
  if (code ===  8) ret = 'Undefined line number';
  if (code ===  9) ret = 'Subscript out of range';
  if (code === 10) ret = 'Duplicate Definition';
  if (code === 11) ret = 'Division by zero';
  if (code === 12) ret = 'Illegal direct';
  if (code === 13) ret = 'Type mismatch';
  if (code === 14) ret = 'Out of string space';
  if (code === 15) ret = 'String too long';
  if (code === 16) ret = 'String formula too complex';
  if (code === 17) ret = 'Can\'t continue';
  if (code === 18) ret = 'Undefined user function';
  if (code === 19) ret = 'No RESUME';
  if (code === 20) ret = 'RESUME without error';
  if (code === 21) ret = 'Unprintable error';
  if (code === 22) ret = 'Missing operand';
  if (code === 23) ret = 'Line buffer overflow';
  if (code === 24) ret = 'Device Timeout';
  if (code === 25) ret = 'Device Fault';
  if (code === 26) ret = 'FOR Without NEXT';
  if (code === 27) ret = 'Out of Paper';
  if (code === 28) ret = 'Unprintable error';
  if (code === 29) ret = 'WHILE without WEND';
  if (code === 30) ret = 'WEND without WHILE';
  if (code === 31) ret = 'Unprintable error';
  if (code === 32) ret = 'Unprintable error';
  if (code === 33) ret = 'Unprintable error';
  if (code === 34) ret = 'Unprintable error';
  if (code === 35) ret = 'Unprintable error';
  if (code === 36) ret = 'Unprintable error';
  if (code === 37) ret = 'Unprintable error';
  if (code === 38) ret = 'Unprintable error';
  if (code === 39) ret = 'Unprintable error';
  if (code === 40) ret = 'Unprintable error';
  if (code === 41) ret = 'Unprintable error';
  if (code === 42) ret = 'Unprintable error';
  if (code === 43) ret = 'Unprintable error';
  if (code === 44) ret = 'Unprintable error';
  if (code === 45) ret = 'Unprintable error';
  if (code === 46) ret = 'Unprintable error';
  if (code === 47) ret = 'Unprintable error';
  if (code === 48) ret = 'Unprintable error';
  if (code === 49) ret = 'Unprintable error';
  if (code === 50) ret = 'FIELD overflow';
  if (code === 51) ret = 'Internal error';
  if (code === 52) ret = 'Bad file number';
  if (code === 53) ret = 'File not found';
  if (code === 54) ret = 'Bad file mode';
  if (code === 55) ret = 'File already open';
  if (code === 56) ret = 'Unprintable error';
  if (code === 57) ret = 'Device I/O Error';
  if (code === 58) ret = 'File already exists';
  if (code === 59) ret = 'Unprintable error';
  if (code === 60) ret = 'Unprintable error';
  if (code === 61) ret = 'Disk full';
  if (code === 62) ret = 'Input past end';
  if (code === 63) ret = 'Bad record number';
  if (code === 64) ret = 'Bad filename';
  if (code === 65) ret = 'Unprintable error';
  if (code === 66) ret = 'Direct statement in file';
  if (code === 67) ret = 'Too many files';
  if (code === 68) ret = 'Device Unavailable';
  if (code === 69) ret = 'Communication buffer overflow';
  if (code === 70) ret = 'Permission Denied';
  if (code === 71) ret = 'Disk not Ready';
  if (code === 72) ret = 'Disk media error';
  if (code === 73) ret = 'Advanced Feature';
  if (code === 74) ret = 'Rename across disks';
  if (code === 75) ret = 'Path/File Access Error';
  if (code === 76) ret = 'Path not found';

  if (ret === '') throw new Error();
  return ret;
}
